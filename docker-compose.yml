version: '3'

services:
  postgres:
    image: postgres:13-alpine
    container_name: uol-postgres
    environment:
      - POSTGRES_USER=uol
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=uol
    volumes:
      - $HOME/dataset/uol/postgres:/var/lib/postgresql/data
    restart: always
    networks:
      - uol-db-net

  backend:
    build: ./api
    container_name: uol-api
    entrypoint: dockerize -wait tcp://postgres:5432 -timeout 50s -wait-retry-interval 10s docker-entrypoint.sh
    command: yarn start
    # volumes:
    #   - ./apia:/home/node/api
    depends_on:
      - postgres
    networks:
      - uol-db-net
      - uol-proxy
  
  nginx:
    container_name: uol-nginx
    build: ./nginx
    entrypoint: dockerize -wait http://backend:3333 -timeout 80s -wait-retry-interval 10s /docker-entrypoint.sh nginx -g 'daemon off;'
    ports:
      - 8080:8080
    depends_on: 
      - backend
    networks:
      - uol-proxy

networks:
  uol-db-net:
    driver: bridge
  uol-proxy:
    driver: bridge
